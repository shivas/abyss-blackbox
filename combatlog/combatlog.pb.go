// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: combatlog.proto

package combatlog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LanguageCode int32

const (
	LanguageCode_UNKNOWN  LanguageCode = 0
	LanguageCode_ENGLISH  LanguageCode = 1
	LanguageCode_FRENCH   LanguageCode = 2
	LanguageCode_GERMAN   LanguageCode = 3
	LanguageCode_JAPANESE LanguageCode = 4
	LanguageCode_KOREAN   LanguageCode = 5
	LanguageCode_RUSSIAN  LanguageCode = 6
	LanguageCode_CHINESE  LanguageCode = 7
)

// Enum value maps for LanguageCode.
var (
	LanguageCode_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENGLISH",
		2: "FRENCH",
		3: "GERMAN",
		4: "JAPANESE",
		5: "KOREAN",
		6: "RUSSIAN",
		7: "CHINESE",
	}
	LanguageCode_value = map[string]int32{
		"UNKNOWN":  0,
		"ENGLISH":  1,
		"FRENCH":   2,
		"GERMAN":   3,
		"JAPANESE": 4,
		"KOREAN":   5,
		"RUSSIAN":  6,
		"CHINESE":  7,
	}
)

func (x LanguageCode) Enum() *LanguageCode {
	p := new(LanguageCode)
	*p = x
	return p
}

func (x LanguageCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LanguageCode) Descriptor() protoreflect.EnumDescriptor {
	return file_combatlog_proto_enumTypes[0].Descriptor()
}

func (LanguageCode) Type() protoreflect.EnumType {
	return &file_combatlog_proto_enumTypes[0]
}

func (x LanguageCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LanguageCode.Descriptor instead.
func (LanguageCode) EnumDescriptor() ([]byte, []int) {
	return file_combatlog_proto_rawDescGZIP(), []int{0}
}

type CombatLogRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterName  string       `protobuf:"bytes,1,opt,name=character_name,json=characterName,proto3" json:"character_name,omitempty"`
	CombatLogLines []string     `protobuf:"bytes,2,rep,name=combat_log_lines,json=combatLogLines,proto3" json:"combat_log_lines,omitempty"`
	LanguageCode   LanguageCode `protobuf:"varint,3,opt,name=language_code,json=languageCode,proto3,enum=combatlog.LanguageCode" json:"language_code,omitempty"`
}

func (x *CombatLogRecord) Reset() {
	*x = CombatLogRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_combatlog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombatLogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatLogRecord) ProtoMessage() {}

func (x *CombatLogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_combatlog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatLogRecord.ProtoReflect.Descriptor instead.
func (*CombatLogRecord) Descriptor() ([]byte, []int) {
	return file_combatlog_proto_rawDescGZIP(), []int{0}
}

func (x *CombatLogRecord) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *CombatLogRecord) GetCombatLogLines() []string {
	if x != nil {
		return x.CombatLogLines
	}
	return nil
}

func (x *CombatLogRecord) GetLanguageCode() LanguageCode {
	if x != nil {
		return x.LanguageCode
	}
	return LanguageCode_UNKNOWN
}

var File_combatlog_proto protoreflect.FileDescriptor

var file_combatlog_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x6c, 0x6f, 0x67, 0x22, 0xa0, 0x01, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65,
	0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2a,
	0x74, 0x0a, 0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x45, 0x4e, 0x47, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x45,
	0x4e, 0x43, 0x48, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x41, 0x50, 0x41, 0x4e, 0x45, 0x53, 0x45, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x4b, 0x4f, 0x52, 0x45, 0x41, 0x4e, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x55, 0x53, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x49, 0x4e,
	0x45, 0x53, 0x45, 0x10, 0x07, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x69, 0x76, 0x61, 0x73, 0x2f, 0x61, 0x62, 0x79, 0x73, 0x73,
	0x2d, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_combatlog_proto_rawDescOnce sync.Once
	file_combatlog_proto_rawDescData = file_combatlog_proto_rawDesc
)

func file_combatlog_proto_rawDescGZIP() []byte {
	file_combatlog_proto_rawDescOnce.Do(func() {
		file_combatlog_proto_rawDescData = protoimpl.X.CompressGZIP(file_combatlog_proto_rawDescData)
	})
	return file_combatlog_proto_rawDescData
}

var file_combatlog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_combatlog_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_combatlog_proto_goTypes = []interface{}{
	(LanguageCode)(0),       // 0: combatlog.LanguageCode
	(*CombatLogRecord)(nil), // 1: combatlog.CombatLogRecord
}
var file_combatlog_proto_depIdxs = []int32{
	0, // 0: combatlog.CombatLogRecord.language_code:type_name -> combatlog.LanguageCode
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_combatlog_proto_init() }
func file_combatlog_proto_init() {
	if File_combatlog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_combatlog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombatLogRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_combatlog_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_combatlog_proto_goTypes,
		DependencyIndexes: file_combatlog_proto_depIdxs,
		EnumInfos:         file_combatlog_proto_enumTypes,
		MessageInfos:      file_combatlog_proto_msgTypes,
	}.Build()
	File_combatlog_proto = out.File
	file_combatlog_proto_rawDesc = nil
	file_combatlog_proto_goTypes = nil
	file_combatlog_proto_depIdxs = nil
}
